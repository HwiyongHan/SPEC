spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/han_db
    username: root
    password: gks0923
#    url: jdbc:mysql://spec-db-1.c8qdyivupwng.ap-northeast-2.rds.amazonaws.com:13306/SPEC
#    username: admin
#    password: qwer1234 #${MYSQL_SECRET}


  jpa:
    open-in-view: true
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
      use-new-id-generator-mappings: false
    show-sql: true
    properties:
      hibernate.format_sql: true
      dialect: org.hibernate.dialect.MySQL8InnoDBDialect
      hibernate:
        connection:
          characterEncoding: utf8mb4


  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 50MB


  #  h2:
#    console:
#      enabled: true
#      path: /h2
#  datasource:
#    driver-class-name: com.mysql.cj.jdbc.Driver
#    url: jdbc:mysql://localhost:3306/han_db
#    username: root
#    password: gks0923
#
#  jpa:
#    open-in-view: true
#    hibernate:
#      ddl-auto: update
#      naming:
#        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#      use-new-id-generator-mappings: false
#    show-sql: true
#    properties:
#      hibernate.format_sql: true
#      dialect: org.hibernate.dialect.MySQL8InnoDBDialect

  security:
    oauth2:
      client:
        registration:
          google:
            clientId: ${G_CLIENT_ID}
            clientSecret: ${G_CLIENT_SECRET}
            scope:
              - email
              - profile
#  mail:
#    host: smtp.gmail.com
#    port: 587
#    username: ${G_USERNAME}
#    password: ${G_PASSWORD}
#    properties:
#      mail:
#        smtp:
#          auth: true
#          timeout: 5000
#          starttls:
#            enable: true

logging:
  level:
    org.hibernate.SQL: debug
server:
  servlet:
    encoding:
      force-response: true
mail:
  address:
    admin: admin@gmail.com
jwt:
  key:
    secret: ${JWT_SECRET_KEY}
  access-token-expiration-minutes: 420
  refresh-token-expiration-minutes: 420

cloud:
  aws:
    s3:
      bucket: mainproject-bucket
    credentials:
      access-key: AKIATUJ7QKHFUAP67DGX
      secret-key: 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
    region:
      static: ap-northeast-2
      auto: false
    stack:
      auto: false
